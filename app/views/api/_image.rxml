# Locals:
#   :image              Image instance.
#   :details            Boolean: include details?
#   :refs               Boolean: include observations?
#   :files              Boolean: include image files/urls?

details ||= false
refs    ||= false
files   ||= false

xml.image(
  :id => image.id,
  :url => "#{DOMAIN}/image/show_image/#{image.id}"
) do
  xml.date xml_date(image.when)

  if details
    xml.created          xml_datetime(image.created)
    xml.modified         xml_datetime(image.modified)
    xml.notes            image.notes.to_s.tpl_nodiv
    xml.copyright_holder image.copyright_holder

    render_xml_partial(xml, :license, :locals => {
      :license => image.license,
    })

    render_xml_partial(xml, :user, :locals => {
      :user => image.user,
      :details => false,
    })
  end

  if refs
    xml.observations(:number => image.observations.length) do
      for obs in image.observations
        render_xml_partial(xml, :observation, :locals => {
          :observation => obs,
          :details => false,
        })
      end
    end
  end

  if files
    xml.original_file do
      xml.url          image.original_url
      xml.content_type image.content_type
    end
    xml.normal_file do
      xml.url          image.big_url
      xml.content_type image.content_type
    end
    xml.thumbnail_file do
      xml.url          image.thumbnail_url
      xml.content_type image.content_type
    end
  end
end
