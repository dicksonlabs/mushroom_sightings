# Locals:
#   :object             Image instance.
#   :detail             Boolean: include details?
#   :refs               Boolean: include observations?
#   :files              Boolean: include image files/urls?

detail ||= false
refs   ||= false
files  ||= false

xml.image(
  :id  => object.id,
  :url => "#{HTTP_DOMAIN}/image/show_image/#{object.id}"
) do
  xml.date xml_date(object.when)

  if detail
    xml.created          xml_datetime(object.created)
    xml.modified         xml_datetime(object.modified)
    xml.notes            object.notes.to_s.tpl_nodiv
    xml.copyright_holder object.copyright_holder

    render_xml_partial(xml, :license, :locals => {
      :object => object.license,
    })

    render_xml_partial(xml, :user, :locals => {
      :object => object.user,
      :detail => false,
    })
  end

  if refs
    xml.observations(:number => object.observations.length) do
      for obs in object.observations
        render_xml_partial(xml, :observation, :locals => {
          :object => obs,
          :detail => false,
        })
      end
    end
  end

  if files
    xml.original_file do
      xml.url          object.original_url
      xml.content_type object.content_type
    end
    xml.normal_file do
      xml.url          object.big_url
      xml.content_type object.content_type
    end
    xml.thumbnail_file do
      xml.url          object.thumbnail_url
      xml.content_type object.content_type
    end
  end
end
