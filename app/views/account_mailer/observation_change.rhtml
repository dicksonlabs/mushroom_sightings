<%
  is_now = :email_field_is_now.l

  intro = @observation ?
    :email_object_change_intro.l(:type => :observation.l, :name => @observation.unique_format_name) :
    :email_observation_destroyed_intro.l

  fields = ""
  fields += "*#{:observation.l}:* #{@note}\n" if !@observation
  fields += "*#{:app_time.l}:* #{@time.to_formatted_s(:db)}\n"
  fields += "*#{:app_by.l}:* #{@sender.legal_name} (#{@sender.login})\n" if @sender

  changes = ""
  if @observation and @note
    for field in @note.split(',')
      case field
        when 'date'
          changes += "*#{:app_date.l} #{is_now}:* #{@observation.when.to_formatted_s(:db)}\n"
        when 'location'
          changes += "*#{:location.l} #{is_now}:* #{@observation.place_name}\n"
        when 'notes'
          notes_changed = true
        when 'specimen'
          changes += "*#{:email_field_specimen_available.l}.*\n"    if @observation.specimen
          changes += "*#{:email_field_no_specimen_available.l}.*\n" if !@observation.specimen
        when 'is_collection_location'
          changes += "*#{:email_field_collection_location.l}.*\n"     if @observation.is_collection_location
          changes += "*#{:email_field_collection_not_location.l}.*\n" if !@observation.is_collection_location
        when 'thumb_image_id'
          changes += "*#{:email_field_changed_thumbnail.l}.*\n"
        when 'added_image'
          changes += "*#{:email_field_added_images.l}.*\n"
        when 'removed_image'
          changes += "*#{:email_field_removed_images.l}.*\n"
      end
    end
  end
  changes += "*#{:app_notes.l} #{is_now}:*\n" if notes_changed

  handy_links = :email_handy_links

  links = []
  if @observation
    links.push([:email_links_show_object.l(:type => :observation.l),
      "#{HTTP_DOMAIN}/#{@observation.id}"])
    links.push([:email_links_post_comment.l,
      "#{HTTP_DOMAIN}/comment/add_comment?id=#{@observation.id}&type=Observation"])
    links.push([:email_links_not_interested.l(:type => :observation.l),
      "#{HTTP_DOMAIN}/interest/set_interest?id=#{@observation.id}&type=Observation&user=#{@user.id}&state=-1"])
  end
  links.push([:email_links_latest_changes.l,
    HTTP_DOMAIN])

if @user.email_html ######################################################### %>
<html>
<head>
  <title>Mushroom Observer: <%= @subject %></title>
</head>
<body topmargin=0 leftmargin=0 rightmargin=0 bottommargin=0><br/>
<%= intro.tp %>
<%= fields.tp %>
<%= changes.tp %>
<% if notes_changed %>
  <div style='margin-left:20px; margin-right:20px; padding-left:20px; padding-right:20px; padding-top:10px; padding-bottom:10px; border:1px dotted; background:#E0E0E0; color:#000000;'>
    <%= sanitize(@observation.notes).tp %>
  </div>
<% end %>
<%= handy_links.tp %>
<ul type=none>
  <% for label, url in links %>
    <li><%= label %>: <%= link_to(url, url) %></li>
  <% end %>
</ul>
<br/>
</body>
</html>
<% else ##################################################################### %>
<%= intro.tp.html_to_ascii %>

<%= fields.tp.html_to_ascii %>
<% if @observation %>
<%= changes.tp.html_to_ascii %>

<% if notes_changed %><%= @observation.notes.tp.html_to_ascii + "\n" %>
--------------------------------------------------
<% end %><% end %>
<%= handy_links.tp.html_to_ascii %>

<%= result = ''
  for label, url in links
    result += "#{label}: #{url}\n"
  end
  result %>
<% end ###################################################################### %>
