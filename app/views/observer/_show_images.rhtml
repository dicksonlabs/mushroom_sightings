<div class='show_images'>
  <% if @observation.images.length > 0 %>
    <%= :IMAGES.t %>:<br/>
  <% end %>

  <% if check_permission(@observation.user_id) %>
    <%= link_to(:show_observation_add_images.t, :controller => 'image',
                :action => 'add_image', :id => @observation.id,
                :params => query_params) %><br/>
    <%= link_to(:show_observation_reuse_image.t, :controller => 'image',
                :action => 'reuse_image', :id => @observation.id,
                :params => query_params) %><br/>
    <% if @observation.images.length > 0 %>
      <%= link_to(:show_observation_remove_images.t, :controller => 'image',
                  :action => 'remove_images', :id => @observation.id,
                  :params => query_params) %><br/>
    <% end %>
  <% end %>
  <br/>

  <center>
    <%
    # This sort puts the thumbnail first.  We can't use thumb_image, because we
    # haven't eager-loaded it; we *have* eager-loaded all the other images.
    for image in @observation.images.
             sort_by {|x| x.id == @observation.thumb_image_id ? -1 : x.id} %>
      <p>
        <%= thumbnail(image, :border => 0, :obs => @observation.id) %><br/>
        <%= if is_reviewer? && @js
          javascript_include('image_vote')
          current = image.quality
          [:low, :medium, :high].map do |quality|
            str = if quality == current
              content_tag(:b, :"quality_#{quality}".t)
            else
              link_to_function(:"quality_#{quality}".t,
                               "image_vote(#{image.id}, '#{quality}')")
            end
            content_tag(:span, str, :id => "image_#{image.id}_#{quality}")
          end.join(' | ') + '<br/>'
        end %>
        <% if !image.notes.blank? %>
          <small>
            <%= image.notes.tl.truncate_html(300) %>
          </small>
        <% end %>
      </p>
    <% end %>
  </center>
</div>
