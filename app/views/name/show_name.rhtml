<%
  @title = :show_name_title.t(:name => @name.display_name)
  Textile.register_name(@name)

  draw_interest_icons(@name, @interest) if @user

  # Google Images | Distribution Map | Email Tracking
  new_tab_set do
    add_tab(:app_google_images.t,
            "http://images.google.com/images?q=#{@name.text_name}")
    if @data != []
      add_tab(:show_name_distribution_map.t, :action => 'map', :id => @name.id,
              :params => query_params)
    end
    add_tab(:show_name_email_tracking.t, :action => 'email_tracking',
            :id => @name.id, :params => query_params)
  end

  # Edit Name | Bulk Name Edit | Add Name | Change Synonyms | Approve/Deprecate
  new_tab_set do
    add_tab(:show_name_edit_name.t, :action => 'edit_name', :id => @name.id,
            :params => query_params)
    add_tab(:show_name_bulk_name_edit.t, :action => 'bulk_name_edit',
            :params => query_params)
    add_tab(:show_name_add_name.t, :action => 'create_name',
            :params => query_params)
    add_tab(:show_name_change_synonyms.t, :action => 'change_synonyms',
            :id => @name.id, :params => query_params)
    if @name.deprecated
      add_tab(:app_approve.t, :action => 'approve_name', :id => @name.id,
              :params => query_params)
    else
      add_tab(:app_deprecate.t, :action => 'deprecate_name', :id => @name.id,
              :params => query_params)
    end
  end

  # Prev | Index | Next
  new_tab_set do
    add_tab(:app_prev.t, :action => 'prev_name', :id => @name.id,
            :params => query_params)
    add_tab(:app_index.t, :action => 'list_names', :id => @name.id,
            :params => query_params)
    add_tab(:app_next.t, :action => 'next_name', :id => @name.id,
            :params => query_params)
  end
%>

<table cellpadding="5" width="100%">
  <tr>
    <td valign="top" width="50%">
      <p>
        <% approved_synonyms, deprecated_synonyms = @name.sort_synonyms %>

        <%= :app_rank.t %>: <%= rank_as_string(@name.rank) %><br/>
        <%= :app_name_status.t %>: <%= @name.status %>
          <% if @name.is_misspelling? %>
            (<%= :app_misspelled.t %>)
          <% end %><br/>
        <%= :app_name.t %>: <%= h(@name.text_name) %><br/>
        <%= :app_author.t %>: <%= sanitize(@name.author.to_s).t %><br/>
        <%= :app_citation.t %>: <%= sanitize(@name.citation.to_s).t %><br/>

        <% if @name.is_misspelling? && approved_synonyms != [@name.correct_spelling] %>
          <%= :show_name_misspelling_correct.t %>:
            <%= link_to(@name.correct_spelling.display_name.t,
                        :action => :show_name, :id => @name.correct_spelling_id,
                        :params => query_params) %><br/>
        <% end %>
        <% if approved_synonyms != []
          links = approved_synonyms.map do |n|
            link_to(n.display_name.t, :action => "show_name", :id => n.id,
                    :params => query_params)
          end %>
          <%= @name.deprecated ? :show_name_preferred_synonyms.t :
                        :show_name_synonyms.t %>: <%= links.join(', ') %><br/>
        <% end
        if deprecated_synonyms != []
          links = deprecated_synonyms.map do |n|
            link_to(n.display_name.t, :action => "show_name", :id => n.id,
                    :params => query_params)
          end %>
          <%= :show_name_deprecated_synonyms.t %>: <%= links.join(', ') %><br/>
        <% end %>

        <%= :app_version.t %>: <%= @name.version %><br/>
        <% if @past_name %>
          <%= link_to("#{:show_name_previous_version.t}: %d" % @past_name.version,
                      :action => 'show_past_name', :id => @name.id,
                      :version => @past_name.version,
                      :params => query_params) %><br/>
        <% end %>

        <% for parent in @parents %>
          <%= rank_as_string(@parents[0].rank) %>:
            <%= link_to(parent.display_name.t, :action => 'show_name',
                        :id => parent.id, :params => query_params) %><br/>
        <% end %>
      </p>
    </td>

    <td valign="top" width="50%">
      <p>
        <% if @existing_drafts or @user_projects %>
          <span class='HelpNote'>
            <%= :show_name_draft_help.t %><br/>
          </span>
        <% end %>
        <% if @existing_drafts %>
          <%= :show_name_existing_drafts.t %><br/>
          <% for draft in @existing_drafts %>
            &nbsp;&nbsp;
            <%= link_to(draft.project.title.t, :controller => :project,
                        :action => 'show_draft', :id => draft.id) %>
            (<%= user_link(draft.user) %>)<br/>
          <% end %>
        <% end %>
      </p>

      <p>
        <% if @user_projects %>
          <%= :show_name_create_draft.t %><br/>
          <% for project in @user_projects %>
            &nbsp;&nbsp;
            <%= link_to(project.title.t, :controller => :project,
                        :action => 'create_or_edit_draft',
                        :project => project.id, :name => @name.id) %><br/>
          <% end %>
        <% end %>
      </p>
    </td>
  </tr>
</table>

<% if @name.has_any_notes? %>
  <hr/>
  <% unless @name.ok_for_export %>
    <%= :no_export.t %><br/>
  <% end %>

  <%= :show_name_content_status.t %>: <%= @name.review_status.t %><br/>
  <% if @name.reviewer %>
    <span class="HelpNote">
      &nbsp;&nbsp;(<%= :show_name_latest_review.t(
        :date => @name.last_review ? @name.last_review.strftime("%Y-%m-%d") : :app_unknown.t,
        :user => user_link(@name.reviewer, @name.reviewer.login)
      ) %>)
    </span><br/>
  <% end %>

  <% if @is_reviewer %>
    &nbsp;&nbsp;<%= link_to(:unvetted.t, :action => 'set_review_status',
                            :value => :unvetted, :id => @name.id,
                            :params => query_params) %><br/>
    &nbsp;&nbsp;<%= link_to(:vetted.t, :action => 'set_review_status',
                            :value => :vetted, :id => @name.id,
                            :params => query_params) %><br/>
    &nbsp;&nbsp;<%= link_to(:inaccurate.t, :action => 'set_review_status',
                            :value => :inaccurate, :id => @name.id,
                            :params => query_params) %><br/>
    <% if @name.ok_for_export %>
      &nbsp;&nbsp;<%= link_to(:no_export.t, :action => 'set_export_status',
                              :value => false, :id => @name.id,
                              :params => query_params) %><br/>
    <% else %>
      &nbsp;&nbsp;<%= link_to(:ok_for_export.t, :action => 'set_export_status',
                              :value => true, :id => @name.id,
                              :params => query_params) %><br/>
    <% end %>
  <% end %>
  <br/>

  <% odd_or_even = 0
  for f in Name.all_note_fields
    value = @name.send(f).to_s
    if value != ''
      odd_or_even = 1 - odd_or_even %>
      <%= "form_names_#{f}".to_sym.t %>:
      <div class="ListLine<%= odd_or_even %>" style='margin-left:10px; margin-right:10px; padding-left:10px; padding-right:10px; padding-top:10px; padding-bottom:10px; border:1px dotted; '>
        <%= sanitize(value).tpl %>
      </div><br/>
    <% end %>
  <% end %>

  <center>
    <p>
      <%= user_list(:show_name_description_author.t, @name.authors) %>
      <%
        is_author = @name.authors.member?(@user)
        if @name.authors != [] %>
        <% unless is_author %>
          <%= link_to(:show_name_author_request.t, :action => 'author_request',
                      :id => @name.id) %>&nbsp;
        <% end %>
      <% end %>
      <% if (@name.authors == []) or is_author or @is_reviewer %>
        &nbsp;<%= link_to(:review_authors_review_authors.t,
                          :action => 'review_authors', :id => @name.id,
                          :params => query_params)%>
      <% end %>
      <br/>
      <%= user_list(:show_name_description_editor.t, @name.editors) %>
    </p>
    <% if @name.license %>
      <%= render(:partial => "shared/form_#{@name.license.form_name}") %>
    <% end %>
  </center>
<% end %>

<% if @children_data && @children_data.length > 0 %>
  <hr/>
  <p>
    <a id="children"></a>
    <%= rank_as_plural_string(@children_data[0].rank) %>:
    <%= if @children_data.length < @children_query.num_results
      link_to("(#{:app_show_all.t})", :action => 'list_names',
              :params => query_params(@children_query))
    end %>
  </p>
  <%= pagination_numbers(@children_pages, :anchor => 'children') %>
  <p>
    <% for child in @children_data %>
      <%= link_to(child.display_name.t, :action => 'show_name', :id => child.id,
                  :params => query_params(@children_query)) %><br/>
    <% end %>
  </p>
  <%= pagination_numbers(@children_pages, :anchor => 'children') %>
<% end %>

<%
# -----------------------------------------
#  Draw the three groups of observations.
# -----------------------------------------
num_sects = 0
for sect in ['consensus', 'synonym', 'other']
  if sect == 'consensus'
    head  = :show_name_observations.t + ':'   # Displayed above group.
    data  = @consensus_data                   # Data returned by sql query.
    pages = @consensus_pages                  # Pagination object.
    query = @consensus_query                  # Associated query.
  elsif sect == 'synonym'
    head  = :show_name_synonym_observations.t + ':'
    data  = @synonym_data
    pages = @synonym_pages
    query = @synonym_query
  else
    head  = %(
      #{:show_name_other_observations.t}:<br/>
      <span class="HelpNote">
        #{:show_name_other_observations_notes.t(:name => @name.display_name)}
      </span>
    )
    data  = @other_data
    pages = @other_pages
    query = @other_query
  end

  # Skip completely if group is empty.
  if data && data.length > 0
    num_sects += 1 %>
    <br/><hr/>
    <p>
      <a id="<%=sect%>"></a>
      <%= head %>
      <%= if data.length < query.num_results
        link_to("(#{:app_show_all.t})", :controller => 'observer',
                :action => 'list_observations', :params => query_params(query))
      end %>
    </p>
    <%= pagination_numbers(pages, :anchor => sect) %>
    <table cellpadding="5" cellspacing="0">
      <% odd_or_even = 0
      for obs in data
        odd_or_even = 1 - odd_or_even %>
        <tr valign="top" class="ListLine<%= odd_or_even %>">
          <td width="110" align="center" valign="middle">
            <%= if image_id = obs.thumb_image_id
              link_to(image_tag("thumb/#{image_id}.jpg", :border => 0),
                      :controller => 'observer', :action => 'show_observation',
                      :id => obs.id, :params => query_params(query))
            end %>
          </td>
          <td width="100%" valign="middle">
            <span class="ListName">
              <%= link_to(obs.name.observation_name.t + " (#{obs.id})",
                          :controller => 'observer',
                          :action => 'show_observation', :id => obs.id,
                          :params => query_params(query)) %>
            </span><br/>
            <span class="ListWhere">
              <%= location_link(obs.where, obs.location_id) %>
            </span>:
            <span class="ListWho">
              <%= user_link(obs.user_id, "#{obs.user.name} (#{obs.user.login})") %>
            </span><br/>
            <%= :observation_made.t %>: <%= obs.when.web_date %><br/>
            <%= :observation_made_confidence.t %>:
              <%= v = obs.vote_cache
              if v.nil? || v == ''
                :app_no_votes.t
              else
                (v.to_f*100/3).round.to_s + "%"
              end %>
          </td>
        </tr>
      <% end %>
    </table>
    <%= pagination_numbers(pages, :anchor => sect) %>
  <% end %>
<% end %>

<p>
  <span class="Date">
    <%= :app_created.t(:type => :app_name.l,
                       :date => @name.created.web_time) %><br/>
    <%= :app_last_modified.t(:user => user_link(@name.user),
                             :date => @name.modified.web_time) %><br/>
    <%= :app_viewed.t(:date => @name.last_view.web_time,
                      :times => @name.num_views == 1 ? :app_one_time.l :
                        :app_many_times.l(:num => @name.num_views)) %><br/>
    <% if rss_log = @name.rss_log %>
      <%= link_to(:app_show_log.t, :controller => 'observer',
                  :action => 'show_rss_log', :id => rss_log.id) %>
    <% end %>
  </span>
</p>
