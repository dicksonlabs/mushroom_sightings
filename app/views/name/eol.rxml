xml.instruct! :xml, :version => "1.0" 
xml.response("xmlns" => "http://www.eol.org/transfer/data/0.1",
  "xmlns:xsd" => "http://www.w3.org/2001/XMLSchema",
  "xmlns:dc" => "http://purl.org/dc/elements/1.1/",
  "xmlns:dcterms" => "http://purl.org/dc/terms/",
  "xmlns:geo" => "http://www.w3.org/2003/01/geo/wgs84_pos#",
  "xmlns:dwc" => "http://rs.tdwg.org/dwc/dwcore/",
  "xmlns:xsi" => "http://www.w3.org/2001/XMLSchema-instance",
  "xsi:schemaLocation" => "http://www.eol.org/transfer/data/0.1 http://services.eol.org/development/pleary/xml/content4.xsd",
  "xmlns:creativeCommons" => "http://backend.userland.com/creativeCommonsRssModule",
  "xmlns:media" => "http://search.yahoo.com/mrss/") {
    for taxon in @names
      xml.taxon do
        xml.dc(:identifier, "#{DOMAIN}/name/show_name/#{taxon.id}")
        xml.dc(:source, "#{DOMAIN}/name/show_name/#{taxon.id}")
        xml.dwc(:Kingdom, "Fungi")
        xml.dwc(:ScientificName, taxon.search_name)
        xml.dcterms(:modified, taxon.modified.utc.strftime('%Y-%m-%dT%H:%M:%SZ'))
        citation = taxon.citation
        if citation and citation != ''
          xml.reference(citation.t)
        end
        for f in Name.eol_note_fields
          value = taxon.send(f)
          if value && value != '':
            xml.dataObject do
              xml.dc(:identifier, "Name-#{taxon.id}-#{f}")
              xml.dataType("http://purl.org/dc/dcmitype/Text")
              xml.mimeType("text/html")
              xml.agent(@users[taxon.user_id], :role => "author")
              xml.dcterms(:modified, taxon.modified.utc.strftime('%Y-%m-%dT%H:%M:%SZ'))
              xml.dc(:title, "form_names_#{f}".to_sym.l, "xml:lang" => "en")
              xml.dc(:language, "en")
              xml.license(@licenses[taxon.license_id])
              xml.dcterms(:rightsHolder, @users[taxon.user_id])
              xml.audience('General public')
              
              # Note the following mapping assumes that this is being read in English
              xml.subject("http://rs.tdwg.org/ontology/voc/SPMInfoItems#%s" % "form_names_#{f}".to_sym.l.gsub(" ", ""))
              
              xml.dc(:description, taxon.send(f).tp, "xml:lang" => "en")
              # xml.reviewStatus(taxon.review_status)
            end
          end
        end
        if @image_data[taxon.id]
          for image_id, observation_id in @image_data[taxon.id]
            image = Image.find(image_id)
            xml.dataObject do
              xml.dc(:identifier, "Image-#{image.id}")
              xml.dataType("http://purl.org/dc/dcmitype/StillImage")
              xml.mimeType("image/jpeg")
              xml.agent(@users[image.user_id], :role => "photographer") # Illustrations need to be identified
              xml.dcterms(:created, image.created.utc.strftime('%Y-%m-%dT%H:%M:%SZ'))
              xml.license(@licenses[image.license_id])
              xml.dcterms(:rightsHolder, @users[image.user_id])
              xml.audience('General public')
              xml.dc(:description, taxon.search_name, "xml:lang" => "en")
              xml.mediaURL("#{DOMAIN}/images/640/#{image.id}.jpg")
              # xml.reviewStatus(image.review_status)
            end
          end
        end
      end
    end
  }
